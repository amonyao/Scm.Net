<h2 class="mtit" style="margin: 0px; padding: 1em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 30px; background-color: rgb(25, 118, 210); color: rgb(255, 255, 255); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">配置参考 \ 图片&amp;文件上传配置<span style="display: block; font-size: 16px; font-weight: 400;">设置TinyMCE的图片和文件上传参数</span></h2>
<div class="mcnt" style="-webkit-locale: auto; font-size: 14px; padding: 1em; line-height: 2; overflow-wrap: break-word; color: rgb(51, 51, 51); font-family: 'PingFang SC', 'Lantinghei SC', 'Microsoft Yahei', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">
<p class="update" style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em; font-weight: bold;">此页更新时间：2020-10-28 11:46</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">此页英文文档：<a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="https://www.tiny.cloud/docs/configure/file-image-upload/" target="_blank" rel="noopener">https://www.tiny.cloud/docs/configure/file-image-upload/</a></p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">配置选项列表：</p>
<ul style="margin: 0px 0px 0.5em 4em; padding: 0px; list-style: disc;">
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#automatic_uploads">automatic_uploads</a></li>
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#file_picker_callback">file_picker_callback（文件上传回调）</a></li>
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#file_picker_types">file_picker_types（文件选择器的使用场景）</a></li>
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#images_dataimg_filter">images_dataimg_filter</a></li>
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#images_reuse_filename">images_reuse_filename</a></li>
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#images_upload_url">images_upload_url（上传实现的URL）</a></li>
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#images_upload_base_path">images_upload_base_path（图片地址基本目录）</a></li>
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#images_upload_credentials">images_upload_credentials</a></li>
<li style="margin: 0px; padding: 0px;"><a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/configure/file-image-upload.php#images_upload_handler">images_upload_handler（图片上传自定义实现）</a></li>
</ul>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">如要快速上手，可以阅读<a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/general/upload-images.php">《简介与入门：上传图片和文件》</a>这个章节，里面包含完整的上传代码示例。</p>
<h3 id="automatic_uploads" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">automatic_uploads</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">开关使用Data URL/Blob URL插入图片和文件到内容区的方式。例如，图像是使用imagetools插件处理后插入到内容区的，此时图像并未真正上传到服务器，而是以Data URL/Blob URL的方式插入在内容中。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">该选项默认是开启的，如禁用，则必须配置images_upload_url，即指定接收图片上传的远程地址，如未指定该配置，则禁用无效。</p>
<blockquote style="margin: 1em 3em 1em 2em; padding: 0px 0px 0px 1em; position: relative; color: rgb(153, 153, 153); font-weight: 400; border-left: 2px solid rgb(26, 188, 156); background-color: rgb(248, 248, 248); overflow-wrap: break-word;">也可使用tinymce自带方法 uploadImages 手动上传。</blockquote>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：true / false</strong></p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">默认：true</strong></p>
<div class="code-toolbar" style="-webkit-locale: auto; position: relative;">
<pre class="line-numbers language-js" style="margin: 0.5em 0px; padding: 1em 1em 1em 3.8em; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; background: rgb(39, 40, 34); border: 1px solid rgb(221, 221, 221); display: block; color: rgb(248, 248, 242); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: break-word; line-height: 1.5; tab-size: 4; hyphens: none; overflow: auto; border-radius: 0.3em; position: relative; counter-reset: linenumber 0;"><code class=" language-js" style="margin: 0px; padding: 0px; font-style: normal; font-weight: 400; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; color: rgb(248, 248, 242); background: none; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: inherit; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative;">tinymce<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">init</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
    selector<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">'#textarea1'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    automatic_uploads<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token boolean" style="color: rgb(174, 129, 255);">false</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    images_upload_url<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">'postAcceptor.php'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
<span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
</code></pre>
<div class="toolbar" style="-webkit-locale: auto; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;">
<div class="toolbar-item" style="-webkit-locale: auto; display: inline-block;"><a style="color: rgb(17, 119, 221); text-decoration: none; cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; background: rgba(224, 224, 224, 0.2); box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em; border-bottom: 1px dotted rgb(17, 119, 221);">Copy</a></div>
</div>
</div>
<h3 id="file_picker_callback" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">file_picker_callback（文件上传回调）</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">配置此选项将在图片、媒体、链接对话框中加入上传文件功能</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">当用户点击上传按钮后，TinyMCE将在你自定义的函数中传递三个参数：</p>
<ul style="margin: 0px 0px 0.5em 4em; padding: 0px; list-style: disc;">
<li style="margin: 0px; padding: 0px;">callback：上传成功后执行的回调函数，此函数是由TinyMCE定义的，它的第一个参数是上传结果，第二个参数可以是一个object，其中定义了要填入对话框中的字段键值。</li>
<li style="margin: 0px; padding: 0px;">value：当前受影响的字段值</li>
<li style="margin: 0px; padding: 0px;">meta：为一个包含指定对话框中其它字段值的对象（meta.filetype是当前对话框的文件类型）</li>
</ul>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">注意：file_picker_callback仅为一个自定义钩子，具体上传功能需要自己实现。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：Function</strong></p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">该功能的演示请参考：<a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/general/upload-images.php">《简介与入门：上传图片和文件》</a>中的文件上传部分，里面包含完整的上传代码示例。</p>
<h3 id="file_picker_types" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">file_picker_types（文件选择器的使用场景）</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">使用空格或逗号分隔，允许的值包括：file,image和media。该选项需配合file_picker_types使用，未指定的对话框则不会出现文件上传按钮。file对应链接对话框，image对应图片对话框，media对应多媒体对话框。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">类型：String</strong></p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：'file image media'</strong></p>
<div class="code-toolbar" style="-webkit-locale: auto; position: relative;">
<pre class="line-numbers language-js" style="margin: 0.5em 0px; padding: 1em 1em 1em 3.8em; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; background: rgb(39, 40, 34); border: 1px solid rgb(221, 221, 221); display: block; color: rgb(248, 248, 242); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: break-word; line-height: 1.5; tab-size: 4; hyphens: none; overflow: auto; border-radius: 0.3em; position: relative; counter-reset: linenumber 0;"><code class=" language-js" style="margin: 0px; padding: 0px; font-style: normal; font-weight: 400; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; color: rgb(248, 248, 242); background: none; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: inherit; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative;">tinymce<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">init</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
    selector<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">'#textarea1'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    <span class="token function-variable function" style="color: rgb(230, 219, 116);">file_picker_callback</span><span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token keyword keyword-function" style="color: rgb(102, 217, 239);">function</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span><span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    file_picker_types<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">'file image media'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
<span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
</code></pre>
<div class="toolbar" style="-webkit-locale: auto; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;">
<div class="toolbar-item" style="-webkit-locale: auto; display: inline-block;"><a style="color: rgb(17, 119, 221); text-decoration: none; cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; background: rgba(224, 224, 224, 0.2); box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em; border-bottom: 1px dotted rgb(17, 119, 221);">Copy</a></div>
</div>
</div>
<h3 id="images_dataimg_filter" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">images_dataimg_filter</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">5.3.0不推荐使用，并于5.3.2被移除</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">定义一个自定义过滤器处理base64图像转blobs的逻辑。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">该函数的参数是一个DOM对象。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：Function</strong></p>
<div class="code-toolbar" style="-webkit-locale: auto; position: relative;">
<pre class="line-numbers language-js" style="margin: 0.5em 0px; padding: 1em 1em 1em 3.8em; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; background: rgb(39, 40, 34); border: 1px solid rgb(221, 221, 221); display: block; color: rgb(248, 248, 242); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: break-word; line-height: 1.5; tab-size: 4; hyphens: none; overflow: auto; border-radius: 0.3em; position: relative; counter-reset: linenumber 0;"><code class=" language-js" style="margin: 0px; padding: 0px; font-style: normal; font-weight: 400; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; color: rgb(248, 248, 242); background: none; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: inherit; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative;">tinymce<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">init</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
    selector<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">'#textarea1'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    <span class="token function-variable function" style="color: rgb(230, 219, 116);">images_dataimg_filter</span><span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token keyword keyword-function" style="color: rgb(102, 217, 239);">function</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">img</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
        <span class="token keyword keyword-return" style="color: rgb(102, 217, 239);">return</span> img<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">hasAttribute</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'internal-blob'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
    <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span>
<span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
</code></pre>
<div class="toolbar" style="-webkit-locale: auto; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;">
<div class="toolbar-item" style="-webkit-locale: auto; display: inline-block;"><a style="color: rgb(17, 119, 221); text-decoration: none; cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; background: rgba(224, 224, 224, 0.2); box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em; border-bottom: 1px dotted rgb(17, 119, 221);">Copy</a></div>
</div>
</div>
<h3 id="images_reuse_filename" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">images_reuse_filename</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">TinyMCE默认会给每个上传的文件生成唯一的文件名。有时候我们不希望这么做，例如，automatic_uploads被开启时，尽管当前图片文件没有变，但使用imagetools插件对图像进行每一次操作都会导致文件上传，并且每次都将使用不同的文件名。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">将该配置设为true则可以避免此问题，它将告诉TinyMCE使用图片文件实际的文件名，而不是每次随即生成一个新的。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">因为img标签的src属性可能是服务器返回来的任何文件名，该文件名将在下次上传时被使用。</p>
<blockquote style="margin: 1em 3em 1em 2em; padding: 0px 0px 0px 1em; position: relative; color: rgb(153, 153, 153); font-weight: 400; border-left: 2px solid rgb(26, 188, 156); background-color: rgb(248, 248, 248); overflow-wrap: break-word;">译者注：该配置目前仅imagetools插件有用。</blockquote>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：true / false</strong></p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">默认：false</strong></p>
<div class="code-toolbar" style="-webkit-locale: auto; position: relative;">
<pre class="line-numbers language-js" style="margin: 0.5em 0px; padding: 1em 1em 1em 3.8em; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; background: rgb(39, 40, 34); border: 1px solid rgb(221, 221, 221); display: block; color: rgb(248, 248, 242); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: break-word; line-height: 1.5; tab-size: 4; hyphens: none; overflow: auto; border-radius: 0.3em; position: relative; counter-reset: linenumber 0;"><code class=" language-js" style="margin: 0px; padding: 0px; font-style: normal; font-weight: 400; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; color: rgb(248, 248, 242); background: none; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: inherit; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative;">tinymce<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">init</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
    selector<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">'#textarea1'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    automatic_uploads<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token boolean" style="color: rgb(174, 129, 255);">true</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    images_upload_url<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">'postAcceptor.php'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    images_reuse_filename<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token boolean" style="color: rgb(174, 129, 255);">true</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
<span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
</code></pre>
<div class="toolbar" style="-webkit-locale: auto; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;">
<div class="toolbar-item" style="-webkit-locale: auto; display: inline-block;"><a style="color: rgb(17, 119, 221); text-decoration: none; cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; background: rgba(224, 224, 224, 0.2); box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em; border-bottom: 1px dotted rgb(17, 119, 221);">Copy</a></div>
</div>
</div>
<h3 id="images_upload_url" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">images_upload_url（上传实现的URL）</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">指定接收上传图片的后端地址。调用editor.uploadImages()或utomatically时如果启用automatic_uploads则会触发该配置。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">上传程序应按以下格式返回上传后的文件url：</p>
<div class="code-toolbar" style="-webkit-locale: auto; position: relative;">
<pre class="line-numbers language-js" style="margin: 0.5em 0px; padding: 1em 1em 1em 3.8em; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; background: rgb(39, 40, 34); border: 1px solid rgb(221, 221, 221); display: block; color: rgb(248, 248, 242); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: break-word; line-height: 1.5; tab-size: 4; hyphens: none; overflow: auto; border-radius: 0.3em; position: relative; counter-reset: linenumber 0;"><code class=" language-js" style="margin: 0px; padding: 0px; font-style: normal; font-weight: 400; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; color: rgb(248, 248, 242); background: none; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: inherit; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative;"><span class="token comment" style="color: slategray;">//json格式</span>
<span class="token punctuation" style="color: rgb(248, 248, 242);">{</span> <span class="token string" style="color: rgb(166, 226, 46);">"location"</span><span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">"folder/sub-folder/new-location.png"</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span>
</code></pre>
<div class="toolbar" style="-webkit-locale: auto; position: absolute; top: 0.3em; right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0;">
<div class="toolbar-item" style="-webkit-locale: auto; display: inline-block;"><a style="color: rgb(17, 119, 221); text-decoration: none; cursor: pointer; font-size: 0.8em; padding: 0px 0.5em; background: rgba(224, 224, 224, 0.2); box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0px 0px; border-radius: 0.5em; border-bottom: 1px dotted rgb(17, 119, 221);">Copy</a></div>
</div>
</div>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">该功能的演示请参考：<a style="color: rgb(17, 119, 221); text-decoration: none; border-bottom: 1px dotted rgb(17, 119, 221);" href="http://tinymce.ax-z.cn/general/upload-images.php">《简介与入门：上传图片和文件》</a>，里面包含完整的上传代码示例。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：string</strong></p>
<blockquote style="margin: 1em 3em 1em 2em; padding: 0px 0px 0px 1em; position: relative; color: rgb(153, 153, 153); font-weight: 400; border-left: 2px solid rgb(26, 188, 156); background-color: rgb(248, 248, 248); overflow-wrap: break-word;">images_upload_url: 'postAcceptor.php'</blockquote>
<h3 id="images_upload_base_path" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">images_upload_base_path（图片地址基本目录）</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">指定一个基本路径，多用于不同目录结构中，修正上传图片功能返回的图片相对地址。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：string</strong></p>
<blockquote style="margin: 1em 3em 1em 2em; padding: 0px 0px 0px 1em; position: relative; color: rgb(153, 153, 153); font-weight: 400; border-left: 2px solid rgb(26, 188, 156); background-color: rgb(248, 248, 248); overflow-wrap: break-word;">images_upload_base_path: '/some/basepath'</blockquote>
<h3 id="images_upload_credentials" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">images_upload_credentials</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">对images_upload_url中指定的地址调用时是否传递cookie等跨域的凭据。</p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：true / false</strong></p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">默认：false</strong></p>
<blockquote style="margin: 1em 3em 1em 2em; padding: 0px 0px 0px 1em; position: relative; color: rgb(153, 153, 153); font-weight: 400; border-left: 2px solid rgb(26, 188, 156); background-color: rgb(248, 248, 248); overflow-wrap: break-word;">images_upload_credentials: true</blockquote>
<h3 id="images_upload_handler" style="margin: 0px 0px 0.5em; padding: 0.4em 1em 0.3em; font-family: 'Microsoft Yahei', 'PingFang SC', Verdana, 'Helvetica Neue', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', sans-serif; font-size: 24px; background-color: rgb(238, 238, 255);">images_upload_handler（图片上传自定义实现）</h3>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">此选项允许你使用自定义函数代替TinyMCE来处理上传操作。该自定义函数可接受四个参数：</p>
<ul style="margin: 0px 0px 0.5em 4em; padding: 0px; list-style: disc;">
<li style="margin: 0px; padding: 0px;">blobInfo</li>
<li style="margin: 0px; padding: 0px;">成功回调</li>
<li style="margin: 0px; padding: 0px;">失败回调</li>
<li style="margin: 0px; padding: 0px;">上传进度（取值1-100）</li>
</ul>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">如果未使用此配置，TinyMCE将使用ajax每次上传一个图片，并在成功返回结果后调用成功回调函数。</p>
<blockquote style="margin: 1em 3em 1em 2em; padding: 0px 0px 0px 1em; position: relative; color: rgb(153, 153, 153); font-weight: 400; border-left: 2px solid rgb(26, 188, 156); background-color: rgb(248, 248, 248); overflow-wrap: break-word;">此函数将完全接管编辑器的图片上传，你需要在上传成功后执行成功回调函数，参数则为图片URL，也可以在第二个参数加入对话框填充数据对象。</blockquote>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;"><strong style="font-weight: bold; color: rgb(0, 0, 0);">取值：Function</strong></p>
<p style="margin: 0px 0px 0.5em; padding: 0px; text-indent: 2em;">以下为自定义上传实现的一个代码示例：</p>
<div class="code-toolbar" style="-webkit-locale: auto; position: relative;">
<pre class="line-numbers language-js" style="margin: 0.5em 0px; padding: 1em 1em 1em 3.8em; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; background: rgb(39, 40, 34); border: 1px solid rgb(221, 221, 221); display: block; color: rgb(248, 248, 242); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: break-word; line-height: 1.5; tab-size: 4; hyphens: none; overflow: auto; border-radius: 0.3em; position: relative; counter-reset: linenumber 0;"><code class=" language-js" style="margin: 0px; padding: 0px; font-style: normal; font-weight: 400; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; color: rgb(248, 248, 242); background: none; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; text-align: left; white-space: inherit; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; position: relative;">tinymce<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">init</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
    selector<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token string" style="color: rgb(166, 226, 46);">'#textarea1'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span>
    <span class="token function-variable function" style="color: rgb(230, 219, 116);">images_upload_handler</span><span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token keyword keyword-function" style="color: rgb(102, 217, 239);">function</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">blobInfo<span class="token punctuation" style="color: rgb(248, 248, 242);">,</span> success<span class="token punctuation" style="color: rgb(248, 248, 242);">,</span> failure<span class="token punctuation" style="color: rgb(248, 248, 242);">,</span> progress</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
        <span class="token keyword keyword-var" style="color: rgb(102, 217, 239);">var</span> xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">,</span> formData<span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
        xhr <span class="token operator" style="color: rgb(248, 248, 242);">=</span> <span class="token keyword keyword-new" style="color: rgb(102, 217, 239);">new</span> <span class="token class-name" style="color: rgb(230, 219, 116);">XMLHttpRequest</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
        xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>withCredentials <span class="token operator" style="color: rgb(248, 248, 242);">=</span> <span class="token boolean" style="color: rgb(174, 129, 255);">false</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
        xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">open</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'POST'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span> <span class="token string" style="color: rgb(166, 226, 46);">'postAcceptor.php'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>

        xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>upload<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function-variable function" style="color: rgb(230, 219, 116);">onprogress</span> <span class="token operator" style="color: rgb(248, 248, 242);">=</span> <span class="token keyword keyword-function" style="color: rgb(102, 217, 239);">function</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token parameter">e</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
            <span class="token function" style="color: rgb(230, 219, 116);">progress</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span>e<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>loaded <span class="token operator" style="color: rgb(248, 248, 242);">/</span> e<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>total <span class="token operator" style="color: rgb(248, 248, 242);">*</span> <span class="token number" style="color: rgb(174, 129, 255);">100</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
        <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span>

        xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function-variable function" style="color: rgb(230, 219, 116);">onload</span> <span class="token operator" style="color: rgb(248, 248, 242);">=</span> <span class="token keyword keyword-function" style="color: rgb(102, 217, 239);">function</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
            <span class="token keyword keyword-var" style="color: rgb(102, 217, 239);">var</span> json<span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
            <span class="token keyword keyword-if" style="color: rgb(102, 217, 239);">if</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">(</span>xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>status <span class="token operator" style="color: rgb(248, 248, 242);">==</span> <span class="token number" style="color: rgb(174, 129, 255);">403</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
                <span class="token function" style="color: rgb(230, 219, 116);">failure</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'HTTP Error: '</span> <span class="token operator" style="color: rgb(248, 248, 242);">+</span> xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>status<span class="token punctuation" style="color: rgb(248, 248, 242);">,</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">{</span> remove<span class="token punctuation" style="color: rgb(248, 248, 242);">:</span> <span class="token boolean" style="color: rgb(174, 129, 255);">true</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
                <span class="token keyword keyword-return" style="color: rgb(102, 217, 239);">return</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
            <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span>
            <span class="token keyword keyword-if" style="color: rgb(102, 217, 239);">if</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">(</span>xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>status <span class="token operator" style="color: rgb(248, 248, 242);">&lt;</span> <span class="token number" style="color: rgb(174, 129, 255);">200</span> <span class="token operator" style="color: rgb(248, 248, 242);">||</span> xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>status <span class="token operator" style="color: rgb(248, 248, 242);">&gt;=</span> <span class="token number" style="color: rgb(174, 129, 255);">300</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">)</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
                <span class="token function" style="color: rgb(230, 219, 116);">failure</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'HTTP Error: '</span> <span class="token operator" style="color: rgb(248, 248, 242);">+</span> xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>status<span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
                <span class="token keyword keyword-return" style="color: rgb(102, 217, 239);">return</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
            <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span>
            json <span class="token operator" style="color: rgb(248, 248, 242);">=</span> <span class="token constant" style="color: rgb(249, 38, 114);">JSON</span><span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">parse</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span>xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>responseText<span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
            <span class="token keyword keyword-if" style="color: rgb(102, 217, 239);">if</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token operator" style="color: rgb(248, 248, 242);">!</span>json <span class="token operator" style="color: rgb(248, 248, 242);">||</span> <span class="token keyword keyword-typeof" style="color: rgb(102, 217, 239);">typeof</span> json<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>location <span class="token operator" style="color: rgb(248, 248, 242);">!=</span> <span class="token string" style="color: rgb(166, 226, 46);">'string'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
                <span class="token function" style="color: rgb(230, 219, 116);">failure</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'Invalid JSON: '</span> <span class="token operator" style="color: rgb(248, 248, 242);">+</span> xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>responseText<span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
                <span class="token keyword keyword-return" style="color: rgb(102, 217, 239);">return</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
            <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span>
            <span class="token function" style="color: rgb(230, 219, 116);">success</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span>json<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>location<span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
        <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>

        xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function-variable function" style="color: rgb(230, 219, 116);">onerror</span> <span class="token operator" style="color: rgb(248, 248, 242);">=</span> <span class="token keyword keyword-function" style="color: rgb(102, 217, 239);">function</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span> <span class="token punctuation" style="color: rgb(248, 248, 242);">{</span>
            <span class="token function" style="color: rgb(230, 219, 116);">failure</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'Image upload failed due to a XHR Transport error. Code: '</span> <span class="token operator" style="color: rgb(248, 248, 242);">+</span> xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span>status<span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
        <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span>

        formData <span class="token operator" style="color: rgb(248, 248, 242);">=</span> <span class="token keyword keyword-new" style="color: rgb(102, 217, 239);">new</span> <span class="token class-name" style="color: rgb(230, 219, 116);">FormData</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
        formData<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">append</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token string" style="color: rgb(166, 226, 46);">'file'</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span> blobInfo<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">blob</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">,</span> blobInfo<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">filename</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
        
        xhr<span class="token punctuation" style="color: rgb(248, 248, 242);">.</span><span class="token function" style="color: rgb(230, 219, 116);">send</span><span class="token punctuation" style="color: rgb(248, 248, 242);">(</span>formData<span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span>
    <span class="token punctuation" style="color: rgb(248, 248, 242);">}</span>
<span class="token punctuation" style="color: rgb(248, 248, 242);">}</span><span class="token punctuation" style="color: rgb(248, 248, 242);">)</span><span class="token punctuation" style="color: rgb(248, 248, 242);">;</span></code></pre>
</div>
</div>